import streamlit as st
import hashlib

def app():
    """
    Exibe a p√°gina de Criptografia de Hash.
    """
    st.title("üõ°Ô∏è Fun√ß√µes de Hash")
    st.markdown("---")

    ## O que √© uma Fun√ß√£o de Hash?
    st.header("O que √© uma Fun√ß√£o de Hash?")
    st.write("""
    Uma **fun√ß√£o de hash criptogr√°fica** √© como uma "impressora digital" para dados. Ela pega uma entrada (um texto, um arquivo, etc.) de qualquer tamanho e a transforma em uma string de caracteres de tamanho fixo, que √© o **hash**.
    
    As principais caracter√≠sticas de uma fun√ß√£o de hash s√£o:
    1.  **√â de m√£o √∫nica:** √â extremamente f√°cil calcular o hash de uma mensagem, mas praticamente imposs√≠vel reverter o processo e obter a mensagem original a partir do hash.
    2.  **Sa√≠da de tamanho fixo:** Independentemente do tamanho da entrada, a sa√≠da (o hash) ter√° sempre o mesmo tamanho. Por exemplo, o algoritmo SHA-256 sempre produz um hash de 256 bits (64 caracteres hexadecimais).
    3.  **N√£o-colis√£o:** √â computacionalmente invi√°vel encontrar duas entradas diferentes que gerem o mesmo hash.
    
    As fun√ß√µes de hash s√£o amplamente utilizadas para verificar a integridade de dados e para armazenar senhas de forma segura.
    """)
    st.markdown("---")

    ## Gerar Hash
    st.header("Gerar Hash")
    
    # Entrada de texto
    texto_entrada = st.text_area(
        "Digite o texto para gerar o hash:",
        height=150
    )
    
    # Sele√ß√£o do algoritmo de hash
    algoritmo_hash = st.selectbox(
        "Selecione o algoritmo de hash:",
        ("md5", "sha1", "sha256", "sha512")
    )
    
    if st.button("Gerar Hash"):
        if texto_entrada:
            # Codifica o texto para bytes (obrigat√≥rio para a biblioteca hashlib)
            texto_bytes = texto_entrada.encode('utf-8')
            
            # Cria o objeto de hash e atualiza-o com o texto
            hash_object = hashlib.new(algoritmo_hash)
            hash_object.update(texto_bytes)
            
            # Obt√©m o hash em formato hexadecimal
            hash_gerado = hash_object.hexdigest()
            
            st.subheader(f"Hash ({algoritmo_hash.upper()}) Gerado:")
            st.code(hash_gerado, language='text')
            
            st.info("Voc√™ pode mudar o texto ou o algoritmo para ver o hash ser alterado.")
        else:
            st.warning("Por favor, digite um texto para gerar o hash.")
